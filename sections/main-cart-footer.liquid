{{ 'component-cart.css' | asset_url | stylesheet_tag }}
{{ 'component-totals.css' | asset_url | stylesheet_tag }}
{{ 'component-price.css' | asset_url | stylesheet_tag }}
{{ 'component-discounts.css' | asset_url | stylesheet_tag }}

{%- style -%}
  .section-{{ section.id }}-padding {
    padding-top: {{ section.settings.padding_top | times: 0.75 | round: 0 }}px;
    padding-bottom: {{ section.settings.padding_bottom | times: 0.75 | round: 0 }}px;
  }

  @media screen and (min-width: 750px) {
    .section-{{ section.id }}-padding {
      padding-top: {{ section.settings.padding_top }}px;
      padding-bottom: {{ section.settings.padding_bottom }}px;
    }
  }
{%- endstyle -%}

<div class="page-width{% if cart == empty %} is-empty{% endif %}" id="main-cart-footer" data-id="{{ section.id }}">
  <div>
    <div class="cart__footer section-{{ section.id }}-padding">
      {%- if settings.show_cart_note -%}
        <cart-note class="cart__note field">
          <label for="Cart-note">{{ 'sections.cart.note' | t }}</label>
          <textarea
            class="text-area field__input"
            name="note"
            form="cart"
            id="Cart-note"
            placeholder="{{ 'sections.cart.note' | t }}"
          >{{ cart.note }}</textarea>
        </cart-note>
      {%- endif -%}

      <div class="cart__blocks">
        {% for block in section.blocks %}
          {%- case block.type -%}
            {%- when '@app' -%}
              {% render block %}
            {%- when 'subtotal' -%}
              <div class="js-contents" {{ block.shopify_attributes }}>
                <div>
                  {%- if cart.cart_level_discount_applications.size > 0 -%}
                    <ul class="discounts list-unstyled" role="list" aria-label="{{ 'customer.order.discount' | t }}">
                      {%- for discount in cart.cart_level_discount_applications -%}
                        <li class="discounts__discount discounts__discount--position">
                          {%- render 'icon-discount' -%}
                          {{ discount.title }}
                          (-{{ discount.total_allocated_amount | money }})
                        </li>
                      {%- endfor -%}
                    </ul>
                  {%- endif -%}
                </div>

                <div class="totals">
                  <h2 class="totals__total">{{ 'sections.cart.estimated_total' | t }}</h2>
                  <p class="totals__total-value">{{ cart.total_price | money_with_currency }}</p>
                </div>

                <small class="tax-note caption-large rte">
                  {%- if cart.taxes_included and shop.shipping_policy.body != blank -%}
                    {{ 'sections.cart.taxes_included_and_shipping_policy_html' | t: link: shop.shipping_policy.url }}
                  {%- elsif cart.taxes_included -%}
                    {{ 'sections.cart.taxes_included_but_shipping_at_checkout' | t }}
                  {%- elsif shop.shipping_policy.body != blank -%}
                    {{ 'sections.cart.taxes_and_shipping_policy_at_checkout_html' | t: link: shop.shipping_policy.url }}
                  {%- else -%}
                    {{ 'sections.cart.taxes_and_shipping_at_checkout' | t }}
                  {%- endif -%}
                </small>
              </div>
            {%- else -%}
              <div class="ssnow-terms-checkboxes">
                <div>
                  <input
                    form="cart"
                    type="checkbox"
                    id="agree_with_waiver_checkbox"
                    name="attributes[waiver-signed]"
                  >
                  <label for="agree_with_waiver_checkbox" class="inline-richtext">
                    {{ section.settings.agree_with_waiver_text }}
                  </label>
                </div>

                <div>
                  <input
                    form="cart"
                    type="checkbox"
                    id="agree_with_refund_policy_checkbox"
                    name="attributes[agreed-to-refund-policy]"
                  >
                  <label for="agree_with_refund_policy_text" class="inline-richtext">
                    {{ section.settings.agree_with_refund_policy_text }}
                  </label>
                </div>

                <div>
                  {{ section.settings.agree_with_photography_text }}
                </div>

                <div class="terms_reminder_text--text">{{ section.settings.terms_reminder_text }}</div>
              </div>

              <div class="cart__ctas" {{ block.shopify_attributes }}>
                <noscript>
                  <button type="submit" class="cart__update-button button button--secondary" form="cart">
                    {{ 'sections.cart.update' | t }}
                  </button>
                </noscript>

                <button
                  type="submit"
                  id="checkout"
                  class="cart__checkout-button button"
                  name="checkout"
                  {% if cart == empty %}
                    disabled
                  {% endif %}
                  form="cart"
                >
                  {{ 'sections.cart.checkout' | t }}
                </button>
              </div>

              {%- if additional_checkout_buttons -%}
                <div class="cart__dynamic-checkout-buttons additional-checkout-buttons">
                  {{ content_for_additional_checkout_buttons }}
                </div>
              {%- endif -%}
          {%- endcase -%}
        {% endfor %}

        <div id="cart-errors"></div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function () {
    const checkoutButton = document.querySelector(".cart__checkout-button");
    const waiverCheckbox = document.getElementById("agree_with_waiver_checkbox");
    const refundPolicyCheckbox = document.getElementById("agree_with_refund_policy_checkbox");
    const message = document.querySelector(".terms_reminder_text--text");

    waiverCheckbox.addEventListener("change", function() {
      // If the checkbox is checked, store the agreement time as its value
      if (waiverCheckbox.checked) {
        waiverCheckbox.value = "Customer indicated they have signed waiver " + (new Date()).toLocaleString();
      }
    });

    refundPolicyCheckbox.addEventListener("change", function() {
      // If the checkbox is checked, store the agreement time as its value
      if (refundPolicyCheckbox.checked) {
        refundPolicyCheckbox.value = "Agreed to refund policy on " + (new Date()).toLocaleString();
      }
    });

    checkoutButton.addEventListener("click", function(event) {
      if (!waiverCheckbox.checked || !refundPolicyCheckbox.checked) {
        event.preventDefault(); // Prevent the checkout process
        message.style.display = 'block'; // Show reminder text
      } else {
        message.style.display = 'none'; // Hide the reminder message if the checkbox is checked
      }
    });
    
    function isIE() {
      const ua = window.navigator.userAgent;
      const msie = ua.indexOf('MSIE ');
      const trident = ua.indexOf('Trident/');

      return msie > 0 || trident > 0;
    }

    if (!isIE()) return;
    const cartSubmitInput = document.createElement('input');
    cartSubmitInput.setAttribute('name', 'checkout');
    cartSubmitInput.setAttribute('type', 'hidden');
    document.querySelector('#cart').appendChild(cartSubmitInput);
    document.querySelector('#checkout').addEventListener('click', function (event) {
      document.querySelector('#cart').submit();
    });
  });
</script>

{% schema %}
{
  "name": "t:sections.main-cart-footer.name",
  "class": "cart__footer-wrapper",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "agree_with_waiver_text",
      "label": "Agree with waiver text",
      "default": "I have read, understood and signed the Release of liability, waiver of claims and assumption of risks agreement."
    },
    {
      "type": "inline_richtext",
      "id": "agree_with_refund_policy_text",
      "label": "Agree with refund policy text",
      "default": "I have read and understood the Refund & Cancelation Policy."
    },
    {
      "type": "text",
      "id": "agree_with_photography_text",
      "label": "Agree with photography text",
      "default": "I consent to photographs and/or video be taken of me during my participation in the activities in the controlled recreational area and to publication of the photographs by the Releasess Serendipity Snow Club for advertising, promotional and marketing purposes."
    },
    {
      "type": "text",
      "id": "terms_reminder_text",
      "label": "Terms reminder text",
      "default": "Please accept the terms and conditions to proceed."
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_top",
      "default": 40
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "t:sections.all.padding.padding_bottom",
      "default": 40
    }
  ],
  "blocks": [
    {
      "type": "subtotal",
      "name": "t:sections.main-cart-footer.blocks.subtotal.name",
      "limit": 1
    },
    {
      "type": "buttons",
      "name": "t:sections.main-cart-footer.blocks.buttons.name",
      "limit": 1
    },
    {
      "type": "@app"
    }
  ]
}
{% endschema %}
